{"version":3,"sources":["components/diffSelector.js","components/navbar.js","components/progressBar.js","components/card.js","components/Game.js","app.js","index.js"],"names":["DiffSelector","className","id","onClick","props","onDiffSelected","Component","NavBar","this","getClass","getButton","difficulty","style","backgroundColor","onBack","height","width","x1","y1","x2","y2","stroke","strokeWidth","ProgressBar","Fragment","value","getPercent","Card","state","question","answer","points","entered","running","handleKeyPress","event","key","submit","isStarted","setState","generateQuestion","document","getElementById","placeholder","buttonText","onKeyPress","disabled","type","onChange","target","op","multiplier","diff","Math","random","x","getNum","y","Number","num","floor","Game","timeLeft","start","timer","setInterval","clearInterval","App","handleDiffSelection","handleBack","getContent","ReactDOM","render"],"mappings":"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","file":"static/js/main.70336054.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./styles/diffSelector.css\";\r\n\r\nclass DiffSelector extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"buttonsGrp\">\r\n        <h3 id=\"selectDiffLabel\">Select Difficulty:</h3>\r\n        <button\r\n          className=\"diffButton\"\r\n          onClick={() => this.props.onDiffSelected(\"Easy\")}\r\n        >\r\n          Easy\r\n        </button>\r\n        <button\r\n          className=\"diffButton\"\r\n          onClick={() => this.props.onDiffSelected(\"Medium\")}\r\n        >\r\n          Medium\r\n        </button>\r\n        <button\r\n          className=\"diffButton\"\r\n          onClick={() => this.props.onDiffSelected(\"Hard\")}\r\n        >\r\n          Hard\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DiffSelector;\r\n","import React, { Component } from \"react\";\r\n\r\nclass NavBar extends Component {\r\n  render() {\r\n    return (\r\n      <nav className={this.getClass()}>\r\n        {this.getButton()}\r\n\r\n        {this.props.difficulty === null\r\n          ? \"Math Trainer\"\r\n          : \"Difficulty: \" + this.props.difficulty}\r\n      </nav>\r\n    );\r\n  }\r\n  getClass() {\r\n    return this.props.difficulty === null ? null : \"secondNav\";\r\n  }\r\n\r\n  getButton() {\r\n    let button;\r\n    if (this.props.difficulty === null) {\r\n      button = null;\r\n    } else {\r\n      button = (\r\n        <button\r\n          style={{ backgroundColor: \"#00000000\" }}\r\n          onClick={this.props.onBack}\r\n        >\r\n          <svg height=\"20\" width=\"20\" style={{ backgroundColor: \"#00000000\" }}>\r\n            <line\r\n              x1=\"2\"\r\n              y1=\"10\"\r\n              x2=\"20\"\r\n              y2=\"10\"\r\n              style={{ stroke: \"white\", strokeWidth: 2 }}\r\n            />\r\n            <line\r\n              x1=\"10\"\r\n              y1=\"0\"\r\n              x2=\"1\"\r\n              y2=\"11\"\r\n              style={{ stroke: \"white\", strokeWidth: 2 }}\r\n            />\r\n            <line\r\n              x1=\"1\"\r\n              y1=\"10\"\r\n              x2=\"10\"\r\n              y2=\"20\"\r\n              style={{ stroke: \"white\", strokeWidth: 2 }}\r\n            />\r\n          </svg>\r\n        </button>\r\n      );\r\n    }\r\n    return button;\r\n  }\r\n}\r\nexport default NavBar;\r\n","import React, { Component } from \"react\";\r\n\r\nclass ProgressBar extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h2>{this.props.value < 0 ? \"Time's Up!!\" : this.props.value}</h2>\r\n        <div className=\"bar\">\r\n          <div\r\n            className=\"progress\"\r\n            style={{ width: this.getPercent() + \"%\" }}\r\n          ></div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n  getPercent() {\r\n    return (this.props.value / 60) * 100;\r\n  }\r\n}\r\n\r\nexport default ProgressBar;\r\n","import React, { Component } from \"react\";\r\nimport \"./styles/card.css\";\r\n\r\nclass Card extends Component {\r\n  state = {\r\n    question: \"\",\r\n    answer: null,\r\n    points: 0,\r\n    entered: null,\r\n    running: false,\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    if (this.props.isStarted && !this.state.running) {\r\n      this.setState({ running: true });\r\n      this.generateQuestion();\r\n    } else if (!this.props.isStarted && this.state.running) {\r\n      this.setState({\r\n        running: false,\r\n        question: \"\",\r\n        answer: null,\r\n        entered: null,\r\n      });\r\n      document.getElementById(\"input\").placeholder = \"\";\r\n    }\r\n    if (\r\n      this.props.buttonText === \"START\" &&\r\n      !this.state.running &&\r\n      this.state.points !== 0\r\n    ) {\r\n      this.setState({ points: 0 });\r\n    }\r\n  }\r\n\r\n  handleKeyPress = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      this.submit();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div onClick={() => this.submit()} className=\"card\">\r\n        <h4>Question:</h4>\r\n        <h2>{this.state.question}</h2>\r\n        <h4 className=\"down\">Enter Answer:</h4>\r\n        <input\r\n          onKeyPress={this.handleKeyPress}\r\n          disabled={!this.state.running}\r\n          id=\"input\"\r\n          value={this.state.running ? null : \"\"}\r\n          type=\"number\"\r\n          onChange={(event) => {\r\n            this.setState({ entered: event.target.value });\r\n          }}\r\n        ></input>\r\n        <h6>Tap/Click anywhere on the card or use your Enter key to Submit!</h6>\r\n        <h2 className=\"points\">Points: {this.state.points}</h2>\r\n      </div>\r\n    );\r\n  }\r\n  generateQuestion() {\r\n    if (!this.props.isStarted) {\r\n      return;\r\n    }\r\n\r\n    const diff = this.props.diff;\r\n\r\n    let op; //operator\r\n    if (diff === \"Easy\") op = Math.random() * 10 > 5 ? \" + \" : \" - \";\r\n    else {\r\n      if (Math.random() * 10 < 3) op = \" x \";\r\n      else op = Math.random() * 10 > 5 ? \" + \" : \" - \";\r\n    }\r\n\r\n    let multiplier; //numbers\r\n    if (op === \" + \" || op === \" - \") {\r\n      switch (diff) {\r\n        case \"Easy\":\r\n          multiplier = 100;\r\n          break;\r\n        case \"Medium\":\r\n        case \"Hard\":\r\n          multiplier = 1000;\r\n          break;\r\n      }\r\n    } else {\r\n      multiplier = 100;\r\n    }\r\n    const x = this.getNum(multiplier);\r\n    const y = this.getNum(multiplier);\r\n\r\n    let question; //question\r\n    switch (op) {\r\n      case \" + \":\r\n        question = x + \" + \" + y;\r\n        break;\r\n      case \" - \":\r\n        if (x > y) question = x + \" - \" + y;\r\n        else question = y + \" - \" + x;\r\n        break;\r\n      case \" x \":\r\n        question = x + \" x \" + y;\r\n        break;\r\n    }\r\n    this.setState({ question });\r\n    let answer; //answer\r\n    switch (op) {\r\n      case \" + \":\r\n        answer = x + y;\r\n        break;\r\n      case \" - \":\r\n        if (x > y) answer = x - y;\r\n        else answer = y - x;\r\n        break;\r\n      case \" x \":\r\n        answer = x * y;\r\n        break;\r\n    }\r\n    this.setState({ answer });\r\n  }\r\n\r\n  submit() {\r\n    if (\r\n      this.state.running &&\r\n      Number(this.state.entered) === this.state.answer //correct answer\r\n    ) {\r\n      let points;\r\n      switch (\r\n        this.props.diff //points determination\r\n      ) {\r\n        case \"Easy\":\r\n          points = 10;\r\n          break;\r\n        case \"Medium\":\r\n          points = 20;\r\n          break;\r\n        case \"Hard\":\r\n          points = 30;\r\n          break;\r\n      }\r\n      this.generateQuestion();\r\n      this.setState({ points: this.state.points + points });\r\n      document.getElementById(\"input\").placeholder = \"\";\r\n    } else if (\r\n      this.state.running &&\r\n      (this.state.entered === \"\" || this.state.entered === null) //no answer\r\n    ) {\r\n      document.getElementById(\"input\").placeholder = \"Enter a Number!\";\r\n    } else if (\r\n      this.state.running &&\r\n      (this.state.entered !== \"\" || this.state.entered !== null) //wrong answer\r\n    ) {\r\n      document.getElementById(\"input\").placeholder = \"Wrong!\";\r\n    }\r\n    document.getElementById(\"input\").value = \"\";\r\n    this.setState({ entered: \"\" });\r\n  }\r\n\r\n  getNum(multiplier) {\r\n    let num;\r\n    if (multiplier === 100 && this.props.diff === \"Medium\") {\r\n      //for multiplication\r\n      do {\r\n        num = Math.floor(Math.random() * multiplier) + 1;\r\n      } while (num > 15);\r\n      return num;\r\n    } else if (multiplier === 100 && this.props.diff === \"Hard\") {\r\n      do {\r\n        num = Math.floor(Math.random() * multiplier) + 1;\r\n      } while (num > 50);\r\n      return num;\r\n    }\r\n\r\n    if (this.props.diff === \"Medium\") {\r\n      //for addition or subtraction\r\n      do {\r\n        num = Math.floor(Math.random() * multiplier) + 1;\r\n      } while (num > 500);\r\n      return num;\r\n    }\r\n    return Math.floor(Math.random() * multiplier) + 1;\r\n  }\r\n}\r\n\r\nexport default Card;\r\n","import React, { Component } from \"react\";\r\nimport ProgressBar from \"./progressBar.js\";\r\nimport Card from \"./card\";\r\nimport \"./styles/Game.css\";\r\n\r\nclass Game extends Component {\r\n  state = {\r\n    timeLeft: 60, //initial time\r\n    buttonText: \"START\",\r\n    isStarted: false,\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <h4>\r\n          Press Start and Answer as many questions as possible before the Timer\r\n          runs out of Time!\r\n        </h4>\r\n        <ProgressBar value={this.state.timeLeft} />\r\n        <Card\r\n          isStarted={this.state.isStarted}\r\n          diff={this.props.diff}\r\n          buttonText={this.state.buttonText}\r\n        />\r\n        <button\r\n          disabled={this.state.isStarted}\r\n          className=\"startButton\"\r\n          onClick={() => this.start()}\r\n        >\r\n          {this.state.buttonText}\r\n        </button>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n  start() {\r\n    if (this.state.buttonText === \"RESET\") {\r\n      this.setState({ timeLeft: 60, buttonText: \"START\" });\r\n      return;\r\n    }\r\n    this.setState({ isStarted: true });\r\n    const timer = setInterval(() => {\r\n      this.setState({ timeLeft: this.state.timeLeft - 1 }, () => {\r\n        if (this.state.timeLeft < 0) {\r\n          clearInterval(timer);\r\n          this.setState({ buttonText: \"RESET\", isStarted: false });\r\n        }\r\n      });\r\n    }, 1000);\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","import React, { Component } from \"react\";\r\nimport DiffSelector from \"./components/diffSelector.js\";\r\nimport NavBar from \"./components/navbar\";\r\nimport Game from \"./components/Game\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    diff: null,\r\n  };\r\n\r\n  handleDiffSelection = (diff) => {\r\n    this.setState({ diff });\r\n  };\r\n  handleBack = () => {\r\n    this.setState({ diff: null });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <NavBar difficulty={this.state.diff} onBack={this.handleBack} />\r\n        <div className=\"container\">{this.getContent()}</div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  getContent() {\r\n    let content;\r\n    if (this.state.diff === null) {\r\n      content = <DiffSelector onDiffSelected={this.handleDiffSelection} />;\r\n    } else {\r\n      content = <Game diff={this.state.diff} />;\r\n    }\r\n    return content;\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./app.js\";\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}